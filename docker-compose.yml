version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: crm-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      # 持久化数据
      - mysql_data:/var/lib/mysql
      # 初始化SQL脚本
      - ./backend/init-database.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./backend/init-admin.sql:/docker-entrypoint-initdb.d/02-admin.sql
      - ./backend/init-permissions.sql:/docker-entrypoint-initdb.d/03-permissions.sql
      - ./backend/init-test-data.sql:/docker-entrypoint-initdb.d/04-test-data.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+08:00
      - --default-authentication-plugin=mysql_native_password
      - --init-connect=SET NAMES utf8mb4
      - --init-connect=SET collation_connection=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crm-backend
    restart: always
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_SYNCHRONIZE: "true"
      DB_LOGGING: "true"
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    ports:
      - "3000:3000"
    volumes:
      # 持久化上传文件
      - upload_data:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端Nginx服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

# 网络配置
networks:
  crm-network:
    driver: bridge

# 数据卷配置
volumes:
  mysql_data:
    driver: local
  upload_data:
    driver: local
