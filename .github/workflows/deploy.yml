name: 自动部署到生产环境

# 触发条件：当推送到master分支时
on:
  push:
    branches:
      - master
  workflow_dispatch: # 允许手动触发

jobs:
  deploy:
    name: 部署应用
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: 检出代码
        uses: actions/checkout@v3

      # 2. 部署到服务器
      - name: 部署到服务器
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "=========================================="
            echo "开始部署海绵青年CRM系统"
            echo "=========================================="

            # 进入项目目录
            cd ${{ secrets.DEPLOY_PATH }}

            # 拉取最新代码
            echo "正在拉取最新代码..."
            git pull origin master

            # 复制环境变量文件（如果不存在）
            if [ ! -f .env ]; then
              echo "创建环境变量文件..."
              cp .env.example .env
              echo "⚠️  请记得配置 .env 文件中的环境变量！"
            fi

            # 停止旧容器
            echo "停止旧容器..."
            docker-compose down

            # 构建新镜像
            echo "构建Docker镜像..."
            docker-compose build --no-cache

            # 启动新容器
            echo "启动新容器..."
            docker-compose up -d

            # 等待服务启动
            echo "等待服务启动（30秒）..."
            sleep 30

            # 检查容器状态
            echo "检查容器状态..."
            docker-compose ps

            # 清理旧镜像
            echo "清理未使用的Docker镜像..."
            docker image prune -f

            echo "=========================================="
            echo "✅ 部署完成！"
            echo "=========================================="

            # 显示访问地址
            echo "前端地址: http://${{ secrets.SERVER_HOST }}"
            echo "后端API: http://${{ secrets.SERVER_HOST }}:3000"

      # 3. 部署通知（可选，如果配置了钉钉或企业微信）
      - name: 发送部署通知
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ 部署成功！"
          else
            echo "❌ 部署失败，请检查日志"
          fi
